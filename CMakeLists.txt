cmake_minimum_required(VERSION 2.8)
# ---------------- LG    
SET(CMAKE_CXX_STANDARD 11 )
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
message(STATUS ${CMAKE_MODULE_PATH})
find_package(OpenMP)
if (OPENMP_FOUND)
    message(STATUS "Open MP found")
    set (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    set (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    set (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
endif()
find_package(Git QUIET)
if(GIT_FOUND AND EXISTS "${PROJECT_SOURCE_DIR}/.git")
# Update submodules as needed
    option(GIT_SUBMODULE "Check submodules during build" ON)
    if(GIT_SUBMODULE)
        message(STATUS "Submodule update")
        execute_process(COMMAND ${GIT_EXECUTABLE} submodule update --init --recursive
                        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
                        RESULT_VARIABLE GIT_SUBMOD_RESULT)
        if(NOT GIT_SUBMOD_RESULT EQUAL "0")
            message(FATAL_ERROR "git submodule update --init failed with ${GIT_SUBMOD_RESULT}, please checkout submodules")
        endif()
    endif()
endif()
# Get Eigen dependency
set(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake)
find_package(Eigen3 REQUIRED)
set(CHOLMOD_INCLUDES "/home/lgrose/sandbox/SuiteSparse/CHOLMOD/Include")
set(CHOLMOD_LIBRARIES "/home/lgrose/sandbox/SuiteSparse/CHOLMOD/Lib")
set(SPQR_INCLUDES "/home/lgrose/sandbox/SuiteSparse/SPQR/Include")
set(SPQR_LIBRARIES "/home/lgrose/sandbox/SuiteSparse/SPQR/Lib")
set(SUITESPARSE_INCLUDES "/home/lgrose/sandbox/SuiteSparse/include")
set(SUITESPARSE_LIBRARY "/home/lgrose/sandbox/SuiteSparse/lib")
find_package(Cholmod REQUIRED)
find_package(SPQR REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})
include_directories(${SPQR_INCLUDES})
include_directories(${CHOLMOD_INCLUDES})
include_directories(${SUITESPARSE_INCLUDES})
#add pybind11
add_subdirectory(pybind11)

link_directories(${SPQR_LIBRARIES} ${CHOLMOD_LIBRARIES} ${SUITESPARSE_LIBRARY})
pybind11_add_module(eigensparse eigen_wrapper.cpp)
target_link_libraries(eigensparse spqr cholmod suitesparseconfig lapack openblas cudart cublas cuda SuiteSparse_GPURuntime GPUQREngine)
